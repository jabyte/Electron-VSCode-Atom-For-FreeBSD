--- a/product.json	2018-08-30 13:17:57.789812000 +0400
+++ b/product.json	2018-08-30 13:18:09.297464000 +0400
@@ -21,5 +21,12 @@
 	"extensionAllowedProposedApi": [
 		"ms-vscode.node-debug",
 		"ms-vscode.node-debug2"
-	]
+	],
+	"extensionsGallery": {
+		"serviceUrl": "https://marketplace.visualstudio.com/_apis/public/gallery",
+		"cacheUrl": "https://vscode.blob.core.windows.net/gallery/index",
+		"itemUrl": "https://marketplace.visualstudio.com/items",
+		"controlUrl": "https://az764295.vo.msecnd.net/extensions/marketplace.json",
+		"recommendationsUrl": "https://az764295.vo.msecnd.net/extensions/workspaceRecommendations.json"
+	}
 }
--- a/scripts/code.sh	2018-08-29 17:22:21.317094000 +0400
+++ b/scripts/code.sh	2018-08-30 09:00:12.032854000 +0400
@@ -19,14 +19,15 @@
 		CODE="./.build/electron/$NAME.app/Contents/MacOS/Electron"
 	else
 		NAME=`node -p "require('./product.json').applicationName"`
-		CODE=".build/electron/$NAME"
+		#CODE=".build/electron/$NAME"
+		CODE="../electron/electron"
 	fi
 
 	# Node modules
 	test -d node_modules || yarn
 
 	# Get electron
-	node build/lib/electron.js || ./node_modules/.bin/gulp electron
+	#node build/lib/electron.js || ./node_modules/.bin/gulp electron
 
 	# Manage built-in extensions
 	if [[ "$1" == "--builtin" ]]; then
--- a/scripts/code-cli.sh	2018-08-29 17:22:22.489248000 +0400
+++ b/scripts/code-cli.sh	2018-08-30 09:00:53.828226000 +0400
@@ -15,14 +15,14 @@
 		CODE="./.build/electron/$NAME.app/Contents/MacOS/Electron"
 	else
 		NAME=`node -p "require('./product.json').applicationName"`
-		CODE=".build/electron/$NAME"
+		CODE="../electron/electron"
 	fi
 
 	# Node modules
 	test -d node_modules || yarn
 
 	# Get electron
-	node build/lib/electron.js || ./node_modules/.bin/gulp electron
+	#node build/lib/electron.js || ./node_modules/.bin/gulp electron
 
 	# Build
 	test -d out || ./node_modules/.bin/gulp compile
--- a/scripts/npm.sh	2018-08-29 17:22:21.317385000 +0400
+++ b/scripts/npm.sh	2018-08-29 17:22:22.832324000 +0400
@@ -1,3 +1,3 @@
-#!/bin/bash
+#!/usr/local/bin/bash
 
 yarn $*
\ No newline at end of file
--- a/scripts/test.sh	2018-08-29 17:22:21.317609000 +0400
+++ b/scripts/test.sh	2018-08-30 09:04:44.235643000 +0400
@@ -1,4 +1,4 @@
-#!/bin/bash
+#!/usr/local/bin/bash
 
 
 if [[ "$OSTYPE" == "darwin"* ]]; then
@@ -19,14 +19,15 @@
 	CODE="./.build/electron/$NAME.app/Contents/MacOS/Electron"
 else
 	NAME=`node -p "require('./product.json').applicationName"`
-	CODE=".build/electron/$NAME"
+	#CODE=".build/electron/$NAME"
+	CODE="../electron/electron"
 fi
 
 # Node modules
 test -d node_modules || yarn
 
 # Get electron
-node build/lib/electron.js || ./node_modules/.bin/gulp electron
+#node build/lib/electron.js || ./node_modules/.bin/gulp electron
 
 # Unit Tests
 if [[ "$OSTYPE" == "darwin"* ]]; then
diff --git a/scripts/test-integration.sh b/scripts/test-integration.sh
index fc7b94b..690bcc1 100755
--- a/scripts/test-integration.sh
+++ b/scripts/test-integration.sh
@@ -1,4 +1,4 @@
-#!/bin/bash
+#!/usr/local/bin/bash
 set -e
 
 if [[ "$OSTYPE" == "darwin"* ]]; then
--- a/src/paths.js	2017-11-28 17:13:30.169778000 +0400
+++ b/src/paths.js	2017-11-28 17:13:44.777316000 +0400
@@ -12,6 +12,7 @@
 		case 'win32': return process.env['VSCODE_APPDATA'] || process.env['APPDATA'] || path.join(process.env['USERPROFILE'], 'AppData', 'Roaming');
 		case 'darwin': return process.env['VSCODE_APPDATA'] || path.join(os.homedir(), 'Library', 'Application Support');
 		case 'linux': return process.env['VSCODE_APPDATA'] || process.env['XDG_CONFIG_HOME'] || path.join(os.homedir(), '.config');
+		case 'freebsd': return process.env['VSCODE_APPDATA'] || process.env['XDG_CONFIG_HOME'] || path.join(os.homedir(), '.config');
 		default: throw new Error('Platform not supported');
 	}
 }
--- a/package.json	2018-08-27 15:44:56.795490000 +0400
+++ b/package.json	2018-08-27 15:51:20.148463000 +0400
@@ -48,7 +48,6 @@
     "vscode-chokidar": "1.6.2",
     "vscode-debugprotocol": "1.31.0",
     "vscode-nsfw": "1.0.17",
-    "vscode-ripgrep": "^1.0.1",
     "vscode-textmate": "^4.0.1",
     "vscode-xterm": "3.6.0-beta13",
     "winreg": "^1.2.4",
@@ -67,7 +66,6 @@
     "cson-parser": "^1.3.3",
     "debounce": "^1.0.0",
     "documentdb": "^1.5.1",
-    "electron-mksnapshot": "~1.7.0",
     "eslint": "^3.4.0",
     "event-stream": "^3.1.7",
     "express": "^4.13.1",
--- a/src/vs/base/common/platform.ts	2018-08-27 14:13:15.563627000 +0400
+++ b/src/vs/base/common/platform.ts	2018-08-27 14:14:57.754955000 +0400
@@ -46,6 +46,7 @@
 	_isWindows = (process.platform === 'win32');
 	_isMacintosh = (process.platform === 'darwin');
 	_isLinux = (process.platform === 'linux');
+	_isLinux = (process.platform === 'freebsd');
 	_locale = LANGUAGE_DEFAULT;
 	_language = LANGUAGE_DEFAULT;
 	const rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];
--- a/src/vs/workbench/parts/codeEditor/electron-browser/selectionClipboard.ts	2018-08-27 14:13:17.085096000 +0400
+++ b/src/vs/workbench/parts/codeEditor/electron-browser/selectionClipboard.ts	2018-08-27 14:43:55.961933000 +0400
@@ -6,7 +6,6 @@
 'use strict';
 
 import { clipboard } from 'electron';
-import * as platform from 'vs/base/common/platform';
 import { ICodeEditor, IEditorMouseEvent, MouseTargetType } from 'vs/editor/browser/editorBrowser';
 import { Disposable } from 'vs/base/common/lifecycle';
 import { IEditorContribution } from 'vs/editor/common/editorCommon';
@@ -25,7 +24,7 @@
 	constructor(editor: ICodeEditor, @IContextKeyService contextKeyService: IContextKeyService) {
 		super();
 
-		if (platform.isLinux) {
+		if (0) {
 			let isEnabled = editor.getConfiguration().contribInfo.selectionClipboard;
 
 			this._register(editor.onDidChangeConfiguration((e: IConfigurationChangedEvent) => {
--- a/build/npm/postinstall.js	2018-08-27 14:13:12.530334000 +0400
+++ b/build/npm/postinstall.js	2018-08-27 14:15:12.461275000 +0400
@@ -55,5 +55,5 @@
 }
 
 yarnInstall(`build`); // node modules required for build
-yarnInstall('test/smoke'); // node modules required for smoketest
-yarnInstallBuildDependencies(); // node modules for watching, specific to host node version, not electron
\ No newline at end of file
+//yarnInstall('test/smoke'); // node modules required for smoketest
+yarnInstallBuildDependencies(); // node modules for watching, specific to host node version, not electron
--- a/src/vs/code/electron-main/app.ts	2018-08-27 14:55:59.891162000 +0400
+++ b/src/vs/code/electron-main/app.ts	2018-08-27 15:15:44.718218000 +0400
@@ -358,6 +358,8 @@
 			services.set(IUpdateService, new SyncDescriptor(LinuxUpdateService));
 		} else if (process.platform === 'darwin') {
 			services.set(IUpdateService, new SyncDescriptor(DarwinUpdateService));
+		} else if (process.platform === 'freebsd') {
+			services.set(IUpdateService, new SyncDescriptor(LinuxUpdateService));
 		}
 
 		services.set(IWindowsMainService, new SyncDescriptor(WindowsManager, machineId));
--- a/extensions/search-rg/package.json	2018-08-27 15:53:52.404034000 +0400
+++ b/extensions/search-rg/package.json	2018-08-27 15:54:05.058248000 +0400
@@ -14,8 +14,7 @@
   "categories": [],
   "dependencies": {
     "vscode-extension-telemetry": "0.0.18",
-    "vscode-nls": "^3.2.4",
-    "vscode-ripgrep": "^1.0.1"
+    "vscode-nls": "^3.2.4"
   },
   "devDependencies": {
     "@types/node": "8.0.33",
--- a/build/lib/watch/package.json	2018-08-27 15:58:51.640284000 +0400
+++ b/build/lib/watch/package.json	2018-08-27 15:59:12.824822000 +0400
@@ -5,7 +5,6 @@
   "author": "Microsoft ",
   "private": true,
   "devDependencies": {
-    "gulp-watch": "^4.3.9",
-    "nsfw": "^1.0.15"
+    "gulp-watch": "^4.3.9"
   }
 }
